module.exports = {
  rules: {
    "array-bracket-newline":  ["error", "consistent"],
    "array-bracket-spacing": "error",
    "array-element-newline": ["error", "consistent"],
    "block-spacing": "error",
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "camelcase": ["error", { "properties": "never", "ignoreDestructuring": true }],
    // "capitalized-comments": ["error", "always", { "ignoreConsecutiveComments": true }],
    "comma-dangle": ["error", "never"],
    // "comma-spacing": "error",
    // "comma-style": "error",
    // "computed-property-spacing": "error",
    // "consistent-this": "error",
    // "eol-last": "error",
    // "func-call-spacing": "error",
    // "func-name-matching": "error",
    // "func-names": "error",
    // "func-style": "error",
    // "function-paren-newline": "error",
    // "id-blacklist": "error",
    // "id-length": "error",
    // "id-match": "error",
    // "implicit-arrow-linebreak": "error",
    // "indent": "error",
    // "jsx-quotes": "error",
    // "key-spacing": "error",
    // "keyword-spacing": "error",
    // "line-comment-position": "error",
    // "linebreak-style": "error",
    // "lines-around-comment": "error",
    // "lines-between-class-members": "error",
    // "max-depth": "error",
    // "max-len": "error",
    // "max-lines": "error",
    // "max-lines-per-function": "error",
    // "max-nested-callbacks": "error",
    // "max-params": "error",
    // "max-statements": "error",
    // "max-statements-per-line": "error",
    // "multiline-comment-style": "error",
    // "multiline-ternary": "error",
    // "new-cap": "error",
    // "new-parens": "error",
    // "newline-per-chained-call": "error",
    // "no-array-constructor": "error",
    // "no-bitwise": "error",
    // "no-continue": "error",
    // "no-inline-comments": "error",
    // "no-lonely-if": "error",
    // "no-mixed-operators": "error",
    // "no-multi-assign": "error",
    // "no-multiple-empty-lines": "error",
    // "no-negated-condition": "error",
    // "no-nested-ternary": "error",
    // "no-new-object": "error",
    // "no-plusplus": "error",
    // "no-restricted-syntax": "error",
    // "no-tabs": "error",
    // "no-ternary": "error",
    // "no-trailing-spaces": "error",
    // "no-underscore-dangle": "error",
    // "no-unneeded-ternary": "error",
    // "no-whitespace-before-property": "error",
    // "nonblock-statement-body-position": "error",
    // "object-curly-newline": "error",
    // "object-curly-spacing": "error",
    // "object-property-newline": "error",
    // "one-var": "error",
    // "one-var-declaration-per-line": "error",
    // "operator-assignment": "error",
    // "operator-linebreak": "error",
    // "padded-blocks": "error",
    // "padding-line-between-statements": "error",
    // "prefer-object-spread": "error",
    // "quote-props": "error",
    // "quotes": "error",
    // "semi": "error",
    // "semi-spacing": "error",
    // "semi-style": "error",
    // "sort-keys": "error",
    // "sort-vars": "error",
    // "space-before-blocks": "error",
    // "space-before-function-paren": "error",
    // "space-in-parens": "error",
    // "space-infix-ops": "error",
    // "space-unary-ops": "error",
    // "spaced-comment": "error",
    // "switch-colon-spacing": "error",
    // "template-tag-spacing": "error",
    // "unicode-bom": "error",
    // "wrap-regex": "error"
  }
}